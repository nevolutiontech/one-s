{"version":3,"sources":["components/OneSNSShare/index.js","components/OneSNSForm/index.js","App.js","serviceWorker.js","index.js"],"names":["OneSNSShare","initialValues","callback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","propTypes","defaultProps","Checkbox","type","checked","onChange","OneSNSForm","args","websites","url","checkedItems","setCheckedItems","handleCheckClick","useOneSNSShare","Title","Links","Tags","keys","Object","title","text","Text","Link","hash_tags","socialmediaurls","encodeURIComponent","desc","image","appid","redirecturl","via","provider","language","user_id","userid","category","phone_number","phonenumber","email_address","emailaddress","cc_email_address","ccemailaddress","blogger","buffer","diaspora","digg","douban","email","evernote","getpocket","facebook","flattr","flipboard","gmail","bccemailaddress","instapaper","linkedin","livejournal","pinterest","qzone","reddit","renren","skype","sms","threema","tumblr","twitter","vk","weibo","xing","yahoo","GetSocialMediaSiteLinks_WithShareLinks","filter","map","item","eachsite","window","open","onSubmit","className","required","socialmedium","key","Footer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d20bf2e.chunk.js","sourcesContent":["import {useState} from 'react';\n// import PropTypes from 'prop-types';\nimport './OneSNSShare.css';\n\nconst OneSNSShare = (initialValues,callback) => {\n  const [inputs, setInputs] = useState({});\n  \n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n       callback();\n    }\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\n\nOneSNSShare.propTypes = {};\n\nOneSNSShare.defaultProps = {};\n\nexport default OneSNSShare;\n","\nimport React,{useState} from 'react';\n// import PropTypes from 'prop-types';\nimport './OneSNSForm.css';\n// import \"../../styles/tailwind.css\";\nimport useOneSNSShare from '../OneSNSShare';\n\n// Making Checkbox as seprate component\nconst Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\n  // console.log(\"Checkbox: \", name, checked);\n  return (\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n  );\n};\n\nconst OneSNSForm = () => {\n    var args = {};\n\n  let websites = [\n    {\n    url: \"http://www.facebook.com/\",\n    name: \"facebook\",\n    },\n    {\n    url: \"https://twitter.com/\",\n    name: \"twitter\",\n    },\n    {\n    url:\n      \"https://www.linkedin.com/\",\n      name : \"linkedin\"\n    },\n    {\n    url:\n      \"https://www.pinterest.com/\",\n      name : \"pinterest\"\n    }\n  ];\n  const GetSocialMediaSiteLinks_WithShareLinks = (args) => {\n\n    const url = encodeURIComponent(args.url);\n    const title = encodeURIComponent(args.title);\n    const image = encodeURIComponent(args.image);\n    const desc = encodeURIComponent(args.desc);\n    const app_id = encodeURIComponent(args.appid);\n    const redirect_url = encodeURIComponent(args.redirecturl);\n    const via = encodeURIComponent(args.via);\n    const hash_tags = encodeURIComponent(args.hash_tags);\n    const provider = encodeURIComponent(args.provider);\n    const language = encodeURIComponent(args.language);\n    const user_id = encodeURIComponent(args.userid);\n    const category = encodeURIComponent(args.category);\n    const phone_number = encodeURIComponent(args.phonenumber);\n    const email_address = encodeURIComponent(args.emailaddress);\n    const cc_email_address = encodeURIComponent(args.ccemailaddress);\n    const bcc_email_address = encodeURIComponent(args.bccemailaddress);\n\n    var text = title;\n\n    return {\n      \"add.this\": \"http://www.addthis.com/bookmark.php?url=\" + url,\n      blogger:\n        \"https://www.blogger.com/blog-this.g?u=\" +\n        url +\n        \"&n=\" +\n        title +\n        \"&t=\" +\n        desc,\n      buffer: \"https://buffer.com/add?text=\" + text + \"&url=\" + url,\n      diaspora:\n        \"https://share.diasporafoundation.org/?title=\" + title + \"&url=\" + url,\n      digg: \"http://digg.com/submit?url=\" + url + \"&title=\" + text,\n      douban: \"http://www.douban.com/recommend/?url=\" + url + \"&title=\" + text,\n      email: \"mailto:\" + email_address + \"?subject=\" + title + \"&body=\" + desc,\n      evernote:\n        \"http://www.evernote.com/clip.action?url=\" + url + \"&title=\" + text,\n      getpocket: \"https://getpocket.com/edit?url=\" + url,\n      facebook: \"http://www.facebook.com/sharer.php?u=\" + url,\n      flattr:\n        \"https://flattr.com/submit/auto?user_id=\" +\n        user_id +\n        \"&url=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&description=\" +\n        text +\n        \"&language=\" +\n        language +\n        \"&tags=\" +\n        hash_tags +\n        \"&hidden=HIDDEN&category=\" +\n        category,\n      flipboard:\n        \"https://share.flipboard.com/bookmarklet/popout?v=2&title=\" +\n        text +\n        \"&url=\" +\n        url,\n      gmail:\n        \"https://mail.google.com/mail/?view=cm&to=\" +\n        email_address +\n        \"&su=\" +\n        title +\n        \"&body=\" +\n        url +\n        \"&bcc=\" +\n        bcc_email_address +\n        \"&cc=\" +\n        cc_email_address,\n      \"google.bookmarks\":\n        \"https://www.google.com/bookmarks/mark?op=edit&bkmk=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&annotation=\" +\n        text +\n        \"&labels=\" +\n        hash_tags +\n        \"\",\n      instapaper:\n        \"http://www.instapaper.com/edit?url=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&description=\" +\n        desc,\n      \"line.me\": \"https://lineit.line.me/share/ui?url=\" + url + \"&text=\" + text,\n      linkedin:\n        \"https://www.linkedin.com/shareArticle?mini=true&url=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&summary=\" +\n        text +\n        \"&source=\" +\n        provider,\n      livejournal:\n        \"http://www.livejournal.com/update.bml?subject=\" +\n        text +\n        \"&event=\" +\n        url,\n      \"hacker.news\":\n        \"https://news.ycombinator.com/submitlink?u=\" + url + \"&t=\" + title,\n      \"ok.ru\":\n        \"https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=\" + url,\n      pinterest: \"http://pinterest.com/pin/create/button/?url=\" + url,\n      qzone:\n        \"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=\" + url,\n      reddit: \"https://reddit.com/submit?url=\" + url + \"&title=\" + title,\n      renren:\n        \"http://widget.renren.com/dialog/share?resourceUrl=\" +\n        url +\n        \"&srcUrl=\" +\n        url +\n        \"&title=\" +\n        text +\n        \"&description=\" +\n        desc,\n      skype: \"https://web.skype.com/share?url=\" + url + \"&text=\" + text,\n      sms: \"sms:\" + phone_number + \"?body=\" + text,\n      \"telegram.me\":\n        \"https://t.me/share/url?url=\" +\n        url +\n        \"&text=\" +\n        text +\n        \"&to=\" +\n        phone_number,\n      threema: \"threema://compose?text=\" + text + \"&id=\" + user_id,\n      tumblr:\n        \"https://www.tumblr.com/widgets/share/tool?canonicalUrl=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&caption=\" +\n        desc +\n        \"&tags=\" +\n        hash_tags,\n      twitter:\n        \"https://twitter.com/intent/tweet?text=\" +\n        text +\n        \"&url=\" +\n        url +\n        \"&hashtags=\" +\n        hash_tags,\n      vk:\n        \"http://vk.com/share.php?url=\" +\n        url +\n        \"&title=\" +\n        title +\n        \"&comment=\" +\n        desc,\n      weibo:\n        \"http://service.weibo.com/share/share.php?url=\" +\n        url +\n        \"&appkey=&title=\" +\n        title +\n        \"&pic=&ralateUid=\",\n      xing: \"https://www.xing.com/spi/shares/new?url=\" + url,\n      yahoo:\n        \"http://compose.mail.yahoo.com/?to=\" +\n        email_address +\n        \"&subject=\" +\n        title +\n        \"&body=\" +\n        text\n    };\n  }\n  \n  const [checkedItems, setCheckedItems] = useState({});\n  // handle checkbox click event\n    const handleCheckClick = event => {\n        setCheckedItems({\n          ...checkedItems,\n          [event.target.name]: event.target.checked,\n        });\n        // console.log(\"checkedItems: \", checkedItems);\n  };\n  \n  \n\n    //Share to multiple site index in websites  \n  const share = () => {\n    const keys = Object.keys(checkedItems)\n    \n    //assigning value to args\n    args.title = inputs.Title\n    args.text = inputs.Text\n    args.url = inputs.Link\n    args.hash_tags = inputs.Tags\n\n    const socialmediaurls = GetSocialMediaSiteLinks_WithShareLinks(args);\n\n    // filter the checked value i.e true only\n    const filterItem = keys.filter(checked => checkedItems[checked])\n\n    // Get url \n    // *** Note : need refactoring\n    filterItem.map(item => {\n      websites.filter(eachsite => {\n         return (eachsite.name === item );       \n      }).map(({url}) => {\n         return (\n          // alert(socialmediaurls[item]),\n           window.open(socialmediaurls[item])\n           \n         );\n        });\n     });\n   \n    };\n  \n  // using useOneSNSShare hook\n   const {inputs, handleInputChange, handleSubmit} = useOneSNSShare({Title: '', Links: '', Tags: ''},share);\n   \n \n     return(\n      <div >\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n        <label>Title</label>\n        <input type=\"text\" name=\"Title\" onChange={handleInputChange} value={inputs.Title} required />\n        </div>\n        <div className=\"row\">\n        <label>Link</label>\n        <input type=\"text\" name=\"Link\" onChange={handleInputChange} value={inputs.Link} required />\n        </div>\n        <div className=\"row\">\n        <label>Tags</label>\n        <input type=\"text\" name=\"Tags\" onChange={handleInputChange} value={inputs.Tags} required />\n        </div>\n            <div className=\"row\">\n            {Object.keys(websites).map(socialmedium => {\n                  return (\n                    <ul>\n                    <li key={socialmedium}>\n                    <Checkbox\n                      key={socialmedium}\n                      name={websites[socialmedium].name}\n                      checked={checkedItems[websites[socialmedium].name]}\n                      onChange={handleCheckClick}\n                    />\n                    {websites[socialmedium].name}\n                    \n                    </li>\n                    </ul>\n                  );\n                })\n                }\n          \n            </div>\n        {/* <button type=\"submit\">Sign Up</button> */}\n        <div className=\"row\">\n            <input type=\"submit\" value=\"Submit\"/>\n          </div>\n\n        </form>\n        \n        </div>\n        );\n\n    }\n\n// OneSNSForm.propTypes = {};\n\n// OneSNSForm.defaultProps = {};\n\nexport default OneSNSForm;\n","import React from 'react';\n import './App.css';\n\n import OneSNSForm from './components/OneSNSForm';\n\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <p>@N.evolutiontech</p>\n  </footer>\n);\n\nfunction App() {\n  return (\n    <div>\n    <h1>Share your content to all social media with one click</h1>\n    <OneSNSForm/>\n    <Footer/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}